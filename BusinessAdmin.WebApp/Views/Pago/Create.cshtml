@model BusinessAdmin.WebApp.Models.Pago

@{
    ViewBag.Title = "Crear Gasto";
}

@using (Html.BeginForm("Create", "Pago", FormMethod.Post, new { @class = "box" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br /><br />
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="form-errors">
                @Html.ValidationSummary(false, "Resumen de Errores: ", new { @class = "input-error" })
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Monto, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.Monto, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salida, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salida, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.Salida, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cambio, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cambio, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.Cambio, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaPago, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaPago, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })                
                @Html.ValidationMessageFor(model => model.FechaPago, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group hide">
            @Html.LabelFor(model => model.EsActivo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EsActivo)
                @Html.ValidationMessageFor(model => model.EsActivo, "", new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsuarioID, "UsuarioID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsuarioID", String.Empty)
                @Html.ValidationMessageFor(model => model.UsuarioID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoGastoID, "TipoGastoID", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoGastoID", String.Empty)
                @Html.ValidationMessageFor(model => model.TipoGastoID)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-info" />
            </div>
        </div>
    </div>

    <div class="paddingLeft15">
        @Html.ActionLink("Volver a Lista", "Index")
    </div>
    <br />
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
}