@model BusinessAdmin.WebApp.Models.Producto

@{
    ViewBag.Title = "Editar Producto";
}

@using (Html.BeginForm("Edit", "Producto", FormMethod.Post, new { @class = "box" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br /><br />
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="form-errors">
                @Html.ValidationSummary(false, "Resumen de Errores: ", new { @class = "input-error" })
            </div>
        }
        @Html.HiddenFor(model => model.ProductoID)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.Nombre, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrecioCompra, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrecioCompra, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.PrecioCompra, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrecioVenta, new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrecioVenta, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.PrecioVenta, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control mediumSizeInput" } })
                @Html.ValidationMessageFor(model => model.Stock, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EsActivo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EsActivo)
                @Html.ValidationMessageFor(model => model.EsActivo, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SucursalID, "SucursalID", new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.DropDownList("SucursalID", (IEnumerable<SelectListItem>)ViewBag.SucursalID, new { @class = "form-control mediumSizeInput", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.SucursalID, null, new { @class = "input-error" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Editar" class="btn btn-info" />
            </div>
        </div>
    </div>
    
    <div class="paddingLeft15">
        @Html.ActionLink("Volver a Lista de Productos", "Index")
    </div>
    <br />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
